import {
  IntegrationStep,
  IntegrationStepExecutionContext,
} from '@jupiterone/integration-sdk-core';
import { createAPIClient } from '../../client';
import { IntegrationConfig } from '../../config';
import { Entities, IntegrationSteps } from '../constants';
import { createMalwareEntity } from './converters';

export async function fetchMalwares({
  instance,
  jobState,
}: IntegrationStepExecutionContext<IntegrationConfig>) {
  const apiClient = createAPIClient(instance.config);
  await apiClient.iterateMalwares(async (malware) => {
    const malwareEntity = createMalwareEntity(malware);
    await jobState.addEntity(malwareEntity);
  });
}

export const malwareSteps: IntegrationStep<IntegrationConfig>[] = [
  {
    id: IntegrationSteps.MALWARES,
    name: 'Fetch Malwares',
    entities: [Entities.MALWARE],
    relationships: [],
    executionHandler: fetchMalwares,
  },
];
